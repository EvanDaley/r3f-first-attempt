{"version":3,"sources":["components/three_components/objects/LinesRobot.js","components/three_components/ThreeCanvas.js","components/html_components/Menu.js","components/html_components/HTMLContent.js","App.js","reportWebVitals.js","index.js"],"names":["filePath","window","location","href","LinesRobot","props","materialProps","clearcoat","clearcoatRoughness","metalness","roughness","color","normalMap","useTexture","normalScale","THREE","transmission","transparent","group","useRef","useGLTF","nodes","materials","edges","useMemo","Cube001_1","geometry","edges1","Cube001_2","edges2","Cube001_3","edges3","useFrame","current","rotation","y","ref","dispose","position","castShadow","receiveShadow","material","Mat1","Mat2","Mat3","side","Cube001_4","Mat4","Cube002","preload","App","colorManagement","invalidateFrameloop","pixelRatio","PerspectiveCamera","makeDefault","intensity","fallback","Stage","adjustCamera","environment","contactShadow","shadows","OrbitControls","target","MenuContent","setSelection","overlayContentStyle","top","width","textAlign","marginTop","fontSize","buttonStyle","background","border","padding","fontFamily","textDecoration","cursor","style","pointerEvents","height","zIndex","left","backgroundImage","overflowX","transition","onClick","AboutMe","backgroundColor","display","marginRight","HTMLContent","useState","inMenu","setInMenu","selection","justifyContent","right","open","bind","this","strokeWidth","animationDuration","className","ThreeCanvas","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38e9bd83.chunk.js","sourcesContent":["/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useMemo } from 'react'\nimport { useGLTF, useTexture } from '@react-three/drei'\nimport * as THREE from 'three'\nimport { useFrame } from \"@react-three/fiber\"\n\nconst filePath = window.location.href + '/models/Robot.glb'\n\nexport default function LinesRobot(props) {\n  const texture = useTexture(window.location.href + '/images/flakes.png')\n\n  const materialProps = {\n    clearcoat: 1.0,\n    clearcoatRoughness: 0,\n    metalness: 0.65,\n    roughness: 0.3,\n    color: 'blue',\n    normalMap: texture,\n    normalScale: [0.3, 0.3],\n    'normalMap-wrapS': THREE.RepeatWrapping,\n    'normalMap-wrapT': THREE.RepeatWrapping,\n    'normalMap-repeat': [30, 30],\n    'normalMap-anisotropy': 16,\n    transmission: 0.6,\n    transparent: true\n  }\n\n  const group = useRef()\n  const { nodes, materials } = useGLTF(filePath)\n\n  const edges = useMemo(() => new THREE.EdgesGeometry(nodes.Cube001_1.geometry), [nodes])\n  const edges1 = useMemo(() => new THREE.EdgesGeometry(nodes.Cube001_2.geometry), [nodes])\n  const edges2 = useMemo(() => new THREE.EdgesGeometry(nodes.Cube001_3.geometry), [nodes])\n  const edges3 = useMemo(() => new THREE.EdgesGeometry(nodes.Cube001_3.geometry), [nodes])\n\n  // Rotate mesh every frame, this is outside of React without overhead\n  useFrame(() => {\n    if (group.current != null) {\n      group.current.rotation.y = group.current.rotation.y += 0.01\n    }\n  })\n\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group position={[0, .85, 0]}>\n        <mesh\n          castShadow\n          receiveShadow\n          geometry={nodes.Cube001_1.geometry}\n          material={materials.Mat1}\n        >\n        </mesh>\n        <lineSegments geometry={edges}>\n          <lineBasicMaterial color=\"black\" />\n        </lineSegments>\n        <lineSegments geometry={edges1}>\n          <lineBasicMaterial color=\"black\" />\n        </lineSegments>\n        <lineSegments geometry={edges2}>\n          <lineBasicMaterial color=\"black\"  />\n        </lineSegments>\n        <lineSegments geometry={edges3}>\n          <lineBasicMaterial color=\"black\" />\n        </lineSegments>\n        <mesh\n          castShadow\n          receiveShadow\n          geometry={nodes.Cube001_2.geometry}\n          material={materials.Mat2}\n        />\n        <mesh\n          castShadow\n          receiveShadow\n          geometry={nodes.Cube001_3.geometry}\n          material={materials.Mat3}\n        >\n        </mesh>\n        <mesh\n          castShadow\n          receiveShadow\n          geometry={nodes.Cube001_3.geometry}\n          material={materials.Mat3}\n        >\n          <meshPhysicalMaterial {...materialProps} side={THREE.BackSide} />\n        </mesh>\n        <mesh\n          castShadow\n          receiveShadow\n          geometry={nodes.Cube001_4.geometry}\n          material={materials.Mat4}\n        >\n\n        </mesh>\n      </group>\n      <mesh\n        castShadow\n        receiveShadow\n        geometry={nodes.Cube002.geometry}\n        material={materials['Material.001']}\n        position={[0, .85, 0.03]}\n      >\n        <meshPhysicalMaterial {...materialProps} side={THREE.BackSide} transmission={.9} />\n      </mesh>\n    </group>\n  )\n}\n\nuseGLTF.preload(filePath)\n","import LinesRobot from './objects/LinesRobot'\nimport { OrbitControls, Stats, Stage, Loader, PerspectiveCamera } from '@react-three/drei';\nimport { Canvas } from '@react-three/fiber';\nimport { Suspense } from 'react'\n\nfunction App() {\n  const environmentOptions = [\n    'sunset',\n    'dawn',\n    'night',\n    'warehouse',\n    'forest',\n    'apartment',\n    'studio',\n    'city',\n    'park',\n    'lobby',\n  ]\n\n  return (\n    <>\n      <Canvas colorManagement={true} invalidateFrameloop pixelRatio={[1, 2]}>\n        <PerspectiveCamera makeDefault position={[1, 6, 10]} />\n\n        <directionalLight position={[-10, -10, -5]} intensity={1} />\n        <ambientLight />\n        <pointLight position={[10, 10, 10]} />\n\n        <Suspense fallback={null}>\n          <Stage adjustCamera={false} environment={environmentOptions[0]} intensity={.5} contactShadow={true} shadows={true}>\n            <LinesRobot />\n          </Stage>\n        </Suspense>\n\n        {/* <Stats /> */}\n        <OrbitControls target={[0, 1, 0]} />\n      </Canvas>\n\n      {/* <Loader /> */}\n    </>\n  );\n}\n\nexport default App;\n","// Header\n// This contains the menu.\n\nimport { HamburgerButton } from \"react-hamburger-button\";\nimport React, { useState } from 'react';\n\nfunction MenuContent({ setSelection }) {\n  const overlayStyle = {\n    pointerEvents: \"auto\",\n    height: \"100%\",\n    width: \"100%\",\n    position: \"fixed\",\n    zIndex: \"1\",\n    top: \"0\",\n    left: \"0\",\n    backgroundImage: \"linear-gradient(90deg, #134E5E 10%, #71B280 90%)\",\n    overflowX: \"hidden\",\n    transition: \"0.1s\"\n  }\n\n  const overlayContentStyle = {\n    position: \"relative\",\n    top: \"25%\",\n    width: \"100%\",\n    textAlign: \"center\",\n    marginTop: \"48px\",\n    fontSize: \"40px\"\n  }\n\n  const buttonStyle = {\n    color: \"white\",\n    fontSize: '40px',\n    background: \"none\",\n    border: \"none\",\n    padding: \"0!important\",\n    fontFamily: \"arial, sans-serif\",\n    textDecoration: \"none\",\n    cursor: \"pointer\",\n  }\n\n  return (\n    <div style={overlayStyle}>\n      <div style={overlayContentStyle}>\n        <ul>\n          <ol style={overlayContentStyle}>\n            <button style={buttonStyle} onClick={() => setSelection('home')}>Home</button>\n          </ol>\n          <ol style={overlayContentStyle}>\n            <button style={buttonStyle} onClick={() => setSelection('about-me')}>About Me</button>\n          </ol>\n          <ol style={overlayContentStyle}>\n            <button style={buttonStyle} onClick={() => setSelection('get-in-touch')}>Get in Touch</button>\n          </ol>\n        </ul>\n      </div>\n    </div>\n  )\n}\n\n// TODO: Move this out into a seperate component.\nfunction AboutMe() {\n  const overlayStyle = {\n    pointerEvents: \"auto\",\n    height: \"100%\",\n    width: \"100%\",\n    position: \"fixed\",\n    zIndex: \"1\",\n    top: \"0\",\n    left: \"0\",\n    backgroundColor: \"black\",\n    color: \"white\",\n    overflowX: \"hidden\",\n    transition: \"0.1s\"\n  }\n\n  const overlayContentStyle = {\n    display: \"flex\",\n    position: \"relative\",\n    top: \"25%\",\n    width: \"100%\",\n    textAlign: \"left\",\n    marginTop: \"48px\",\n    fontSize: \"25px\",\n  }\n\n  return (\n    <div style={overlayStyle}>\n      <div style={overlayContentStyle}>\n        <div style={{ width: \"30%\", display: \"inline\", textAlign: \"right\", marginRight: \"20px\" }}>\n          <p>[Image]</p>\n        </div>\n        <div style={{ width: \"50%\", display: \"inline\" }}>\n          <p>My name is Evan Daley and I'm a Lead Software Engineer at Two Barrels LLC. </p>\n          <p>I consider myself to be an experienced developer, leader and architect. My strongest proficiencies are JavaScript, Vue, React, Rails, AWS, Docker, and SQL. </p>\n          <p>In my free time, I like to exercise, sleep, and dig into different technologies like R, Kubernetes, GCP, and three.js. Lately I've been a bit obsessed with three.js and react-three-fiber, so thats why this site exists. </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default function HTMLContent() {\n  const [inMenu, setInMenu] = useState(false);\n  const [selection, setSelection] = useState('');\n\n  const handleClick = () => {\n    setInMenu(!inMenu)\n    setSelection('')\n  }\n\n  const headerStyle = {\n    pointerEvents: \"none\",\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    zIndex: \"2\",\n    width: \"100%\",\n    padding: \"40px\",\n    position: \"fixed\",\n  };\n\n  return (\n    <>\n      <div style={headerStyle}>\n        <div style={{ right: \"24px\", pointerEvents: \"auto\" }}>\n          <HamburgerButton\n            open={inMenu}\n            onClick={handleClick.bind(this)}\n            width={25}\n            height={20}\n            strokeWidth={2.5}\n            color='white'\n            animationDuration={0.5}\n          />\n        </div>\n      </div>\n\n      {inMenu ? <MenuContent setSelection={setSelection} /> : null}\n      {selection === 'about-me' ? <AboutMe /> : null}\n    </>\n  )\n}","// HTMLContent.js\n// Throw all the raw HTML content here. This is all rendered outside the context of the canvas,\n// so don't try to do anything fancy with Three.js.\n\nimport Menu from './Menu'\n\nexport default function HTMLContent() {\n  return (\n    <div className=\"html-content-container\">\n      <Menu/>\n\n    </div>\n  )\n}","import './App.css';\nimport ThreeCanvas from './components/three_components/ThreeCanvas'\nimport HTMLContent from './components/html_components/HTMLContent'\n\nfunction App() {\n  return (\n    <>\n      <HTMLContent/>\n      <ThreeCanvas/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}